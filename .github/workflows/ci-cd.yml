name: CI/CD Pipeline

on:
  push:
    branches: ['feature/*', 'master']
  pull_request:
    branches: ['master']

jobs:
  backend-ci:
    name: Continuous Integration
    runs-on: ubuntu-latest
    # Se ejecuta en cualquier rama, incluidas las ramas feature
    if: startsWith(github.ref, 'refs/heads/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Necesario para SonarQube

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint || echo "No linter configured"

      - name: Build
        run: npm run build

      - name: Run unit tests
        run: npm test

      - name: Run pre-commit hooks
        uses: pre-commit/action@v3.0.0

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=daessar_prueba_tecnica_devops_home_power_backend
            -Dsonar.organization=home-power-test
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info

      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: |
            dist
            node_modules
          key: ${{ runner.os }}-build-${{ github.sha }}

  backend-cd:
    name: Continuous Deployment
    needs: backend-ci  # Depende del job ci
    runs-on: ubuntu-latest
    # Solo se ejecuta en la rama main
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Restore cached build artifacts
        uses: actions/cache@v3
        with:
          path: |
            dist
            node_modules
          key: ${{ runner.os }}-build-${{ github.sha }}

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: Package application
        run: npm run package

      - name: Deploy to AWS
        run: sam deploy --stack-name home-power-backend --no-confirm-changeset --no-fail-on-empty-changeset --capabilities CAPABILITY_IAM
